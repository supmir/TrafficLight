	ORG	00H
	AJMP	MAIN

MAIN:	
	MOV	A,#10111011B
	MOV	P2,A
	MOV	P1,A
	MOV	P3,#0D
	MOV 	DPTR, #SEG

START:	ACALL TRONE
	ACALL TRTWO;IF BUTTON PRESSED, ACALL E1
	ACALL TRTHR
	ACALL TRFOU;IF BUTTON PRESSED, ACALL E1
	AJMP	START

DELAY:	MOV	R1,#2d ;10 1s
DELAY1:	MOV	R2,#200d ;200 100ms
DELAY2:	MOV	R3,#250d ;250 1/2 milisec
DELAY3: DJNZ	R3, DELAY3
	JNB 	P0.0,PEDES
	DJNZ	R2, DELAY2
	DJNZ	R1, DELAY1
	RET


PED:	MOV	R1,#50d ;10 1s
PED1:	MOV	R2,#200d ;200 100ms
PED2:	MOV	R3,#250d ;250 1/2 milisec
PED3: 	DJNZ	R3, PED3
	DJNZ	R2, PED2
	DJNZ	R1, PED1
	RET

	
PEDES:	MOV	A, P2
	MOV	B, P1
	MOV	P2,#10111011B
	MOV	P1,#10111011B
	MOV	P3,#0D
	ACALL PED
	MOV 	P2,A
	MOV 	P1,B
	RET

COUNTER:
	MOV A,R4
	;MOV B,R4
	;XRL B,#0FFH
	;MOV A, #11D
	;ADD A, B
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	ACALL DELAY
	ACALL DELAY
	ACALL DELAY
	ACALL DELAY
	DJNZ R4, COUNTER
	MOV A,R4
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	RET

WAIT:
	MOV A,#10d
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	ACALL DELAY
	MOV A,#11d
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	ACALL DELAY
	MOV A,#12d
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	ACALL DELAY
	MOV A,#13d
	MOVC A, @A+DPTR;Convert binary to display pattern
	MOV P3,A
	ACALL DELAY
	RET

TRONE:	MOV	A,#10111110B
	MOV	P2,A
	MOV 	R4,#9d
	ACALL   COUNTER	
	MOV	A,#10111101B
	MOV	P2,A
	ACALL	WAIT
	MOV	A,#10111011B
	MOV	P2,A
	ACALL	WAIT
	RET

TRTWO:	MOV	A,#11101011B
	MOV	P2,A
	MOV 	R4,#7d
	ACALL	COUNTER
	MOV	A,#11011011B
	MOV	P2,A
	ACALL	WAIT
	MOV	A,#10111011B
	MOV	P2,A
	ACALL	WAIT
	RET

	
TRTHR:	MOV	A,#10111110B
	MOV	P1,A
	MOV 	R4,#9d
	ACALL   COUNTER	
	MOV	A,#10111101B
	MOV	P1,A
	ACALL	WAIT
	MOV	A,#10111011B
	MOV	P1,A
	ACALL	WAIT
	RET

TRFOU:	MOV	A,#11101011B
	MOV	P1,A
	MOV 	R4,#7d
	ACALL	COUNTER
	MOV	A,#11011011B
	MOV	P1,A
	ACALL	WAIT
	MOV	A,#10111011B
	MOV	P1,A
	ACALL	WAIT
	RET


		
SEG: 	DB 3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,6FH,1111b,11110b,111100b,111001b;,77H,7CH,39H,5EH,79H,71H

	END
